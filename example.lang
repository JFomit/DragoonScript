type Bool = True | False
let otherwise = True

fn ^ x y
  | y == 0        = 1
  | y == 1        = x
  | y < 0         = 1 / (x ^ -y)
  | otherwise     = (x * x) ^ (y - 1)

type Option x = Some x | None

fn min a b: int -> int -> int
  | a <= b    = a
  | otherwise = b

type Rational = record
  numerator: int
  denominator: int

fn f x = x ^ 2

fn main = ()
